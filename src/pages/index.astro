---
import Card from '../components/Card.astro';
import Layout from '../layouts/Layout.astro';


import type {TarotCard} from '../types.d.ts'
import Papa from 'papaparse'

let error = null
let isLoading = false
const TAROT_DATA: TarotCard[] = []

function setError (message?: string) {
	if (!message) error = null
	else error = {message}
}

function toggleLoading () {
	isLoading = !isLoading
}

async function getSheetData(): Promise<string> {
	const response = await fetch(import.meta.env.CSV_URL)
	return await response.text()
}

	
async function parseToData (): Promise<TarotCard[]> {
	const file = await getSheetData()
	
	// @ts-ignore
	const data = await new Promise<TarotCard[]>((res, rej)=> Papa.parse(file, {
		header: true,
		complete: (result: {data: TarotCard[]}) => res(result.data),
		error: (err: string) => rej(err)
	}))
	
	return data
}
	
	
toggleLoading()
await parseToData()
	.then((data: TarotCard[]) => {
		TAROT_DATA.push(...data)
	})
	.catch((err: string) => console.error(err))
	.finally(() => toggleLoading())
if (TAROT_DATA.length > 0) {
	console.log(TAROT_DATA)
}
---
<Layout title="Mi tarot.">
	<main>
		{TAROT_DATA.map((card: TarotCard) => (
			<Card {...card} />
		))}
	</main>
</Layout>